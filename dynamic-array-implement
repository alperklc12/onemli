class DynamicArray:
    def __init__(self):
        self.n = 0
        self.capacity = 1
        self.A = self.make_array(self.capacity)
    
    def __len__(self):
        return self.n
    
    def __getitem__(self, key):
        if not 0 <= key < self.n:
            raise IndexError('Index Erorr!')
        return self.A[key]
    
    def append(self, ele):
        if self.n == self.capacity:
            self._resize(2 * self.capacity)
        self.A[self.n] = ele
        self.n += 1
    
    def _resize(self, new_cap):
        B = self.make_array(new_cap)
        
        for i in range(self.n):
            B[i] = self.A[i]
            
        self.A = B
        self.capasity = new_cap
    
    def make_array(self, new_cap):
        return (new_cap * ctypes.py_object)()
